<config>
{
  "navigationBarTitleText": "商品详情"
}
</config>

<style lang="postcss" scoped>
.product-view {
  .swiper {
    .slide-image {
      width: 100%;
      height: 100%;
      background-color: #f8f8f8;
    }
  }
  .product-info {
    padding: 32rpx;
    border-bottom: 16rpx solid #f6f6f6;
    .master {
      text-overflow: -o-ellipsis-lastline;
      overflow: hidden;
      text-overflow: ellipsis;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      font-size: 30rpx;
      color: #484848;
    }
    .slave {
      margin-top: 10rpx;
      color: #5f527b;
      font-size: 24rpx;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
    .price-count {
      margin-top: 21rpx;
      vertical-align: middle;
      height: 44rpx;
      line-height: 44rpx;
      .price {
        text-align: left;
        .real {
          color: #c54c82;
          font-size: 30rpx;
        }
        .market {
          color: #9b9b9b;
          font-size: 26rpx;
          display: inline-block;
          padding-left: 18rpx;
          text-decoration: line-through;
        }
      }
      .count {
        color: #9b9b9b;
        font-size: 30rpx;
        text-align: right;
      }
    }
  }
  .bottom-layer {
    height: 98rpx;
  }
  .bottom {
    position: fixed;
    bottom: 0;
    height: 97rpx;
    width: 100%;
    background-color: #ffffff;
    border-top: solid 1rpx #e9ecef;
    font-size: 34rpx;
    .money {
      width: 430rpx;
      padding: 0 32rpx;
      .name {
        line-height: 97rpx;
        display: inline-block;
      }
      .price {
        color: #c54c82;
        line-height: 97rpx;
        display: inline-block;
      }
    }
    .button {
      width: 320rpx;
      background-color: #5f527b;
      color: #ffffff;
      text-align: center;
    }
    .niu {
      height: 98rpx;
      line-height: 98rpx;
    }
  }
  .product-desc {
    text-align: center;
  }
  .desc-title {
    padding: 32rpx 0;
    font-size: 30rpx;
  }
  .desc-list {
    padding: 0 32rpx;
    image{
      width: 686rpx;
    }
  }
}

</style>

<template>
<view class="product-view">
  <swiper indicator-dots="{{indicatorDots}}"
    autoplay="{{autoplay}}" interval="{{interval}}" duration="{{duration}}" class="swiper" style="height:{{swiperHeight}};">
    <block wx:for="{{detail.images}}" wx:key="{{index}}">
      <swiper-item>
        <image src="{{item}}" class="slide-image"/>
      </swiper-item>
    </block>
  </swiper>
  <view class="product-info">
    <view class="master">{{detail.masterName}}</view>
    <view class="slave">{{detail.slaveName}}</view>
    <view class="price-count clearfix">
      <view class="fl price">
        <text class="real">￥{{detail.price}}</text>
        <text class="market">￥{{detail.marketPrice}}</text>
      </view>
      <view class="fr count">{{detail.salesCount}}人购买</view>
    </view>
  </view>
  <view class="product-desc" wx:if="{{desc.length > 0}}">
    <view class="desc-title">—— 商品详情 ——</view>
    <view class="desc-list">
      <block wx:for="{{desc}}" wx:key="{{index}}">
        <image src="{{item.url}}" class="desc-image" mode="widthFix"/>
      </block>
    </view>
  </view>
  <view class="product-note" wx:if="{{note.length > 0}}">
    <view class="desc-title">—— 购买须知 ——</view>
    <view class="desc-list">
      <block wx:for="{{note}}" wx:key="{{index}}">
        <image src="{{item.url}}" class="note-image" mode="widthFix"/>
      </block>
    </view>
  </view>
  <view class="bottom-layer"></view>
  <view class="bottom clearfix">
    <view class="fl money niu">
      <view class="name">价格：</view>
      <view class="price">￥{{detail.price}}</view>
    </view>
    <view class="fr button niu" bindtap="checkout">立即购买</view>
  </view>
</view>

</template>

<script>
import { Page } from '../../libraries/tina.min.js'
import store from '../../store/index.js'
import _ from 'underscore'
//index.js
//获取应用实例
Page.define({
  mixins: [store.connect({
    actions ({ getProductDetail, getProductDesc, getProductNote, refreshProductDetail, refreshProductDesc, refreshProductNote }) {
      return {
        getProductDetail,
        getProductDesc,
        getProductNote,
        refreshProductDetail,
        refreshProductDesc,
        refreshProductNote,
      }
    },
  })],
  data: {
    id: 0,
    detail: {},
    note: [],
    desc: [],
    indicatorDots: false,
    autoplay: false,
    interval: 5000,
    duration: 1000,
    swiperHeight: '750rpx',
  },
  onLoad(){
    console.log("router---", this.$route)
    const info = wx.getSystemInfoSync()
    const id = this.$route.query.productId
    this.setData({
      id: id,
      swiperHeight: (info.windowWidth || 375) * 2 + 'rpx',
    })
    this.getProductDetail(id).then(data=> {
      this.getSku(data)
    })
    this.getProductNote(id).then(data=> {
      this.setData({
        note: data,
      })
    })
    this.getProductDesc(id).then(data=> {
      this.setData({
        desc: data,
      })
    })
  },
  onPullDownRefresh() {
    const { id } = this.data
    this.refreshProductDetail(id).then(data=> {
      this.getSku(data)
      wx.stopPullDownRefresh()
    })
    this.refreshProductNote(id).then(data=> {
      this.setData({
        note: data,
      })
    })
    this.refreshProductDesc(id).then(data=> {
      this.setData({
        desc: data,
      })
    })
  },
  methods: {
    getSku(data) {
      const sku = _.find(data.skuList, v => {
          return v.id === data.defaultSkuId
      })
      data.images = sku.images || []
      data.price = ((sku.price || 0) / 100).toFixed(2)
      data.marketPrice = ((sku.marketPrice || 0) / 100).toFixed(2)
      this.setData({
        detail: data
      })
    },
    checkout() {
      this.$router.navigate(`/pages/pay/pay?productId=${this.data.id}`)
    }
  }
})

</script>
